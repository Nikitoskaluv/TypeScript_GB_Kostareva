"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MyMap = void 0;
class MyMap {
    constructor() {
        this.data = {};
    }
    set(key, value) {
        this.data[key] = value;
    }
    has(key) {
        return Boolean(this.data[key]);
    }
    get(key) {
        return this.data[key];
    }
    remove(key) {
        if (this.has(key)) {
            delete this.data[key];
            return true;
        }
        return false;
    }
    clear() {
        this.data = {};
    }
    getAll() {
        return this.data;
    }
    setAll(arr) {
        arr.forEach((el) => {
            const keyArr = Object.getOwnPropertyNames(el);
            keyArr.forEach(el => {
                this.data[el] = el[el];
            });
        });
    }
}
exports.MyMap = MyMap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTXlNYXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tbW9uL015TWFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLE1BQWEsS0FBSztJQUFsQjtRQUNJLFNBQUksR0FBaUIsRUFBa0IsQ0FBQTtJQWtDM0MsQ0FBQztJQWhDRyxHQUFHLENBQUMsR0FBTSxFQUFFLEtBQVE7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7SUFDM0IsQ0FBQztJQUNELEdBQUcsQ0FBQyxHQUFNO1FBQ04sT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO0lBQ2xDLENBQUM7SUFDRCxHQUFHLENBQUMsR0FBTTtRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBQ0QsTUFBTSxDQUFDLEdBQU07UUFDVCxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDZixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDdEIsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFDRCxLQUFLO1FBQ0QsSUFBSSxDQUFDLElBQUksR0FBRyxFQUFrQixDQUFDO0lBQ25DLENBQUM7SUFDRCxNQUFNO1FBQ0YsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFBO0lBQ3BCLENBQUM7SUFFRCxNQUFNLENBQUMsR0FBd0I7UUFDM0IsR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFO1lBQ2YsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLG1CQUFtQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzlDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUU7Z0JBQ2hCLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQzFCLENBQUMsQ0FBQyxDQUFBO1FBRU4sQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0NBQ0o7QUFuQ0Qsc0JBbUNDIiwic291cmNlc0NvbnRlbnQiOlsiXG5cbmV4cG9ydCBjbGFzcyBNeU1hcDxLIGV4dGVuZHMgbnVtYmVyIHwgc3RyaW5nIHwgc3ltYm9sID0gbnVtYmVyLCBWID0gYW55PntcbiAgICBkYXRhOiBSZWNvcmQ8SywgVj4gPSB7fSBhcyBSZWNvcmQ8SywgVj5cblxuICAgIHNldChrZXk6IEssIHZhbHVlOiBWKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZGF0YVtrZXldID0gdmFsdWU7XG4gICAgfVxuICAgIGhhcyhrZXk6IEspOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5kYXRhW2tleV0pXG4gICAgfVxuICAgIGdldChrZXk6IEspOiBWIHwgdW5kZWZpbmVkIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YVtrZXldO1xuICAgIH1cbiAgICByZW1vdmUoa2V5OiBLKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICh0aGlzLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICBkZWxldGUgdGhpcy5kYXRhW2tleV07XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNsZWFyKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmRhdGEgPSB7fSBhcyBSZWNvcmQ8SywgVj47XG4gICAgfVxuICAgIGdldEFsbCgpOiBSZWNvcmQ8SywgVj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhXG4gICAgfVxuXG4gICAgc2V0QWxsKGFycjogQXJyYXk8UmVjb3JkPEssIFY+Pik6IHZvaWQge1xuICAgICAgICBhcnIuZm9yRWFjaCgoZWwpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleUFyciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGVsKTtcbiAgICAgICAgICAgIGtleUFyci5mb3JFYWNoKGVsID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRhdGFbZWxdID0gZWxbZWxdXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH0pXG4gICAgfVxufSJdfQ==