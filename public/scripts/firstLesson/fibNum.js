// function fib(n: number) {
//     let cur = 1, prev = 1;
//     for (let i = 3; i <= n; i++) {
//         [cur, prev] = [cur + prev, cur];
//     }
//     return cur;
// }
const fib = (n) => {
    let fibArr = [];
    let prev = 0, next = 1;
    for (let i = 0; i < n; i++) {
        let temp = next;
        next = prev + next;
        prev = temp;
        fibArr.push(prev);
    }
    return fibArr;
};
function checkAdnTransform(arr) {
    if (arr.length = 1) {
        const number = parseInt(arr[0]);
        if (!isNaN(number)) {
            console.log(fib(number));
        }
        else {
            console.log('Вы ввели не число');
        }
    }
    else {
        console.log('Введите одно число');
    }
}
const array = process.argv.slice(2);
checkAdnTransform(array);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmliTnVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2ZpcnN0TGVzc29uL2ZpYk51bS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSw0QkFBNEI7QUFDNUIsNkJBQTZCO0FBQzdCLHFDQUFxQztBQUNyQywyQ0FBMkM7QUFDM0MsUUFBUTtBQUNSLGtCQUFrQjtBQUNsQixJQUFJO0FBRUosTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFTLEVBQVksRUFBRTtJQUNoQyxJQUFJLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFDMUIsSUFBSSxJQUFJLEdBQUcsQ0FBQyxFQUNSLElBQUksR0FBRyxDQUFDLENBQUM7SUFDYixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3hCLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQztRQUNoQixJQUFJLEdBQUcsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNuQixJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ1osTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtLQUNwQjtJQUNELE9BQU8sTUFBTSxDQUFBO0FBQ2pCLENBQUMsQ0FBQTtBQUVELFNBQVMsaUJBQWlCLENBQUMsR0FBVTtJQUNqQyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQ2hCLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7U0FDNUI7YUFBTTtZQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUNwQztLQUNKO1NBQU07UUFDSCxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7S0FDckM7QUFDTCxDQUFDO0FBRUQsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGZ1bmN0aW9uIGZpYihuOiBudW1iZXIpIHtcbi8vICAgICBsZXQgY3VyID0gMSwgcHJldiA9IDE7XG4vLyAgICAgZm9yIChsZXQgaSA9IDM7IGkgPD0gbjsgaSsrKSB7XG4vLyAgICAgICAgIFtjdXIsIHByZXZdID0gW2N1ciArIHByZXYsIGN1cl07XG4vLyAgICAgfVxuLy8gICAgIHJldHVybiBjdXI7XG4vLyB9XG5cbmNvbnN0IGZpYiA9IChuOiBudW1iZXIpOiBudW1iZXJbXSA9PiB7XG4gICAgbGV0IGZpYkFycjogbnVtYmVyW10gPSBbXTtcbiAgICBsZXQgcHJldiA9IDAsXG4gICAgICAgIG5leHQgPSAxO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGxldCB0ZW1wID0gbmV4dDtcbiAgICAgICAgbmV4dCA9IHByZXYgKyBuZXh0O1xuICAgICAgICBwcmV2ID0gdGVtcDtcbiAgICAgICAgZmliQXJyLnB1c2gocHJldilcbiAgICB9XG4gICAgcmV0dXJuIGZpYkFyclxufVxuXG5mdW5jdGlvbiBjaGVja0FkblRyYW5zZm9ybShhcnI6IGFueVtdKTogdm9pZCB7XG4gICAgaWYgKGFyci5sZW5ndGggPSAxKSB7XG4gICAgICAgIGNvbnN0IG51bWJlciA9IHBhcnNlSW50KGFyclswXSk7XG4gICAgICAgIGlmICghaXNOYU4obnVtYmVyKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZmliKG51bWJlcikpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ9CS0Ysg0LLQstC10LvQuCDQvdC1INGH0LjRgdC70L4nKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfQktCy0LXQtNC40YLQtSDQvtC00L3QviDRh9C40YHQu9C+Jyk7XG4gICAgfVxufVxuXG5jb25zdCBhcnJheSA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcbmNoZWNrQWRuVHJhbnNmb3JtKGFycmF5KTtcbiJdfQ==